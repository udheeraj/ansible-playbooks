---
# This role installs the NFS storage
 - hosts: storage
   vars:
    device: xvdb # TODO: Pick this up from EC2
    partition: xvdb1 #TODO: Derive from device above
    fstype: xfs
    export: /share #TODO: Move this is to group vars
    app_servers:  [172.30.0.221,172.30.0.222,172.30.0.0/24] # TODO: Derive this from EC2
   tasks:

# We need following utilities:
   - name: Install reuqired packages
     apt: package={{ item }} state=present
     with_items:
     - parted # For creating partitions
     - xfsprogs # XFS partition better support for Glusterfs (future)
     - rpcbind # For  NFS
     - nfs-common # Glusterfs maybe ?
     - nfs-kernel-server

# Checking if the device exists, if this fails its likely an EC2 provisioning issue.
   - name: Check if the Device exists
     shell: echo "{{ device }} doesn't exist. The storage host expects an EBS volume to be mounted as {{ device }}" && exit 1
     when: ansible_devices.{{ device }} is not defined

# Stat the Partition for the next step
   - name: Stat Partition
     stat: path=/dev/{{ partition }}
     register: p

# Using Parted to create a partition and creating a filesystem
   - name: Create Partition and Filesystem
     shell: "parted /dev/{{ device }} mklabel gpt && parted /dev/{{ device }} unit mib mkpart primary 1 100% && mkfs -t {{ fstype }} -i size=512 /dev/{{ partition }}"
     when: not p.stat.exists

# Mount the partition
   - name : Mount the volume
     mount: name={{ export }} src=/dev/{{ partition }} fstype={{ fstype }} state=mounted
     sudo: yes

# Setup exports (handler reload exports)
   - name : Setup exports
     template: src=exports.j2 dest=/etc/exports owner=root mode=0644
     notify: Reload exports
   
# Start rpcbind and NFS
   - name: Start NFS server and required utilities
     service: name={{ item }} state=started enabled=yes  
     with_items:
     - rpcbind
     - nfs-kernel-server
  
# Reload exports everytime there is a change
   handlers:
    - name: Reload exports
      command: exportfs -r

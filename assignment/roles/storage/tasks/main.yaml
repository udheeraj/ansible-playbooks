---
# Add Tomcat group
 - name: Setup  tomcat_user  group
   group: name={{ tomcat_user }} gid=9999

# Add Tomcat User
 - name: Setup tomcat_user user
   user: name={{ tomcat_user }} comment="Apache Tomcat" uid=9999 group={{ tomcat_user }} state=present

# We need following utilities:
 - name: Install required packages
   yum: name={{ item }} state=present update_cache=yes
   with_items:
   - parted # For creating partitions
   - xfsprogs # XFS partition better support for Glusterfs (future)
   - rpcbind # For  NFS
   - nfs-utils # Glusterfs maybe ?

# Checking if the device exists, if this fails its likely an EC2 provisioning issue.
 - name: Check if the Device exists
   shell: echo "{{ device }} doesn't exist. The storage host expects an EBS volume to be mounted as {{ device }}" && exit 1
   when: ansible_devices.{{ device }} is not defined

# Derive the partition
 - name: Getting the partition info
   set_fact: partition="{{ device }}1"

# Stat the Partition for the next step
 - name: Stat Partition
   stat: path=/dev/{{ partition }}
   register: p

# Using Parted to create a partition and creating a filesystem
 - name: Create Partition and Filesystem
   shell: "parted /dev/{{ device }} mklabel gpt && parted /dev/{{ device }} unit mib mkpart primary 1 100% && mkfs -t {{ fstype }} -i size=512 /dev/{{ partition }}"
   when: not p.stat.exists

# Mount the partition
 - name : Mount the volume
   mount: name={{ export }} src=/dev/{{ partition }} fstype={{ fstype }} state=mounted

# Create Persistence dir on NFS share
 - name: Create Persistence dir
   file: dest={{ export }}/persistence mode=755 owner=tomcat state=directory


 - debug: var="{{ groups['appservers'] }}"
## Share the mount for private IPs (Making this generic)
 - name : Create a list of hosts to share
   add_host: hostname={{ hostvars[item]['ansible_eth0']['ipv4']['address'] }} groups=share_hosts
#   add_host: hostname={{ hostvars[item]['ansible_all_ipv4_addresses'][0] }} groups=share_hosts
   with_items: groups['appservers'] # Assuming eth0 as the priv IP

# Setup exports (handler reload exports)
 - name : Setup exports
   template: src=exports.j2 dest=/etc/exports owner=root mode=0644
   notify: Reload exports
   
# Start rpcbind and NFS
 - name: Start NFS server and required utilities
   service: name={{ item }} state=started enabled=yes  
   with_items:
   - rpcbind
   - nfs
